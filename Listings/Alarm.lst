C51 COMPILER V9.54   ALARM                                                                 08/17/2016 14:42:41 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ALARM
OBJECT MODULE PLACED IN .\Objects\Alarm.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE Alarm.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEBUG 
                    -OBJECTEXTEND PRINT(.\Listings\Alarm.lst) TABS(3) OBJECT(.\Objects\Alarm.obj)

line level    source

   1          /*------------------------------------------------------------------*-
   2             A.C (v1.00)
   3            ------------------------------------------------------------------
   4             Simple switch interface code, with software debounce.
   5          
   6             COPYRIGHT
   7             ---------
   8             This code is copyright (c) 2001 by Richard Zhang.
   9          -*------------------------------------------------------------------*/
  10          
  11          #include "Main.h"
  12          #include "Port.h"
  13          
  14          #include "Alarm.h"
  15          #include "IIC.h"
  16          #include "Speech.h"
  17          #include "Timer.h"
  18          #include "Receiver.h"
  19          
  20          // ------ Public variable definitions ------------------------------
  21          
  22          // ------ Public variable declarations -----------------------------
  23          extern bit KBI_G;
  24          extern bit Alarm_G;
  25          extern tByte hSCH_sleep_EN_time;
  26          
  27          // ------ Private variables ----------------------------------------
  28          tByte Alarm_speech_level;
  29          
  30          // ------ Private constants ----------------------------------------
  31          
  32          
  33          /*------------------------------------------------------------------*-
  34            Alarm_Init()
  35            Initialisation function for the switch library.
  36          -*------------------------------------------------------------------*/
  37          void Alarm_Init(void)
  38             {
  39   1         Alarm_speech_level = 0;
  40   1         }
  41          
  42          /*------------------------------------------------------------------*-
  43            Alarm_update()
  44            Initialisation function for the switch library.
  45          -*------------------------------------------------------------------*/
  46          void Alarm_update(void)
  47             {
  48   1         Analyse_KBI();
  49   1         
  50   1         if(Alarm_G)
  51   1            {
  52   2            RXD_power_on();
  53   2            if(Speech_EN == 0)
  54   2               {
C51 COMPILER V9.54   ALARM                                                                 08/17/2016 14:42:41 PAGE 2   

  55   3               switch(Alarm_speech_level)
  56   3                  {
  57   4                  case 0:
  58   4                     {
  59   5                     Alarm_speech_level = 1;
  60   5                     Goto_speech(Catch_thief);
  61   5                     }
  62   4                  break;
  63   4                  case 1:
  64   4                     {
  65   5                     Alarm_speech_level = 0;
  66   5                     Goto_speech(Siren);
  67   5                     }
  68   4                  break;
  69   4                  }        
  70   3               }
  71   2            hSCH_sleep_EN_time = 0;
  72   2            }
  73   1         }
  74          
  75          /*------------------------------------------------------------------*-
  76            Analyse_KBI()
  77            Initialisation function for the switch library.
  78          -*------------------------------------------------------------------*/
  79          void Analyse_KBI(void)
  80             {
  81   1         if(KBI_G)
  82   1            {     
  83   2            KBI_G = 0;  
  84   2            }  
  85   1         }
  86             
  87          /*------------------------------------------------------------------*-
  88            ---- END OF FILE -------------------------------------------------
  89          -*------------------------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     49    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
