C51 COMPILER V9.54   ALARM                                                                 04/01/2016 10:06:44 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ALARM
OBJECT MODULE PLACED IN .\Objects\Alarm.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE Alarm.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEBUG 
                    -OBJECTEXTEND PRINT(.\Listings\Alarm.lst) TABS(3) OBJECT(.\Objects\Alarm.obj)

line level    source

   1          /*------------------------------------------------------------------*-
   2             A.C (v1.00)
   3            ------------------------------------------------------------------
   4             Simple switch interface code, with software debounce.
   5          
   6             COPYRIGHT
   7             ---------
   8             This code is copyright (c) 2001 by Richard Zhang.
   9          -*------------------------------------------------------------------*/
  10          
  11          #include "Main.h"
  12          #include "Port.h"
  13          
  14          #include "Alarm.h"
  15          #include "IIC.h"
  16          #include "Speech.h"
  17          #include "Timer.h"
  18          
  19          // ------ Public variable definitions ------------------------------
  20          
  21          // ------ Public variable declarations -----------------------------
  22          extern bit KBI_G;
  23          
  24          // ------ Private variables ----------------------------------------
  25          tByte Sensor_Int_SourceSystem;
  26          tByte Sensor_Int_SourceMFF;
  27          bit Alarm_G;
  28          // ------ Private constants ----------------------------------------
  29          
  30          
  31          /*------------------------------------------------------------------*-
  32            Alarm_Init()
  33            Initialisation function for the switch library.
  34          -*------------------------------------------------------------------*/
  35          void Alarm_Init(void)
  36             {
  37   1         Sensor_Int_SourceSystem = 0;
  38   1         Sensor_Int_SourceMFF = 0;  
  39   1         Alarm_G = 0;
  40   1         }
  41          
  42          /*------------------------------------------------------------------*-
  43            Alarm_update()
  44            Initialisation function for the switch library.
  45          -*------------------------------------------------------------------*/
  46          void Alarm_update(void)
  47             {
  48   1         Analyse_KBI();
  49   1            
  50   1         if(Alarm_G)
  51   1            {
  52   2            Goto_speech(Ticktack);
  53   2            }
  54   1         }
C51 COMPILER V9.54   ALARM                                                                 04/01/2016 10:06:44 PAGE 2   

  55          
  56          /*------------------------------------------------------------------*-
  57            Analyse_KBI()
  58            Initialisation function for the switch library.
  59          -*------------------------------------------------------------------*/
  60          void Analyse_KBI(void)
  61             {
  62   1         if(KBI_G)
  63   1            {     
  64   2            KBI_G = 0;
  65   2            
  66   2            Sensor_Int_SourceSystem = 0;
  67   2            Sensor_Int_SourceMFF = 0;
  68   2            
  69   2            // Read INT_SOURCE register(0x0c), determine source of interrupt.
  70   2            Sensor_Int_SourceSystem = Single_Read_IIC(0x0c);
  71   2            // Set up case statement to service all possible interrupts.
  72   2            if((Sensor_Int_SourceSystem &0x04) == 0x04)
  73   2               {
  74   3               // If it is MT_FF set the interrupt, read FF_MT_SRC register(0x16).
  75   3               Sensor_Int_SourceMFF = Single_Read_IIC(0x16);
  76   3               if((Sensor_Int_SourceMFF &0x80) == 0x80)
  77   3                  {           
  78   4                  Alarm_G = 1;
  79   4                  }
  80   3               }
  81   2            }  
  82   1         }
  83          
  84          /*------------------------------------------------------------------*-
  85            ---- END OF FILE -------------------------------------------------
  86          -*------------------------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     57    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
