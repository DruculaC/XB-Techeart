C51 COMPILER V9.54   CLOCK                                                                 08/17/2016 14:42:41 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE CLOCK
OBJECT MODULE PLACED IN .\Objects\Clock.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE Clock.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEBUG 
                    -OBJECTEXTEND PRINT(.\Listings\Clock.lst) TABS(3) OBJECT(.\Objects\Clock.obj)

line level    source

   1          /*------------------------------------------------------------------*-
   2             A.C (v1.00)
   3            ------------------------------------------------------------------
   4             Simple switch interface code, with software debounce.
   5          
   6             COPYRIGHT
   7             ---------
   8             This code is copyright (c) 2001 by Richard Zhang.
   9          -*------------------------------------------------------------------*/
  10          
  11          #include "Main.h"
  12          #include "Port.h"
  13          
  14          #include "hSch51.h"
  15          #include "Clock.h"
  16          #include "Battery.h"
  17          #include "Speech.h"
  18          #include "Receiver.h"
  19          #include "Selflearn.h"
  20          
  21          // ------ Public variable definitions ------------------------------
  22          extern bit Alarm_G;
  23          extern bit ID_certificated_G;
  24          extern bit System_EN_G;
  25          extern tByte Speech_time;
  26          extern bit XB_open_flag;
  27          extern bit ID_disable_G;
  28          
  29          
  30          // ------ Public variable declarations -----------------------------
  31          bit hSCH_sleep_EN;
  32          tByte hSCH_sleep_EN_time;
  33          tByte ID_disable_time;
  34          
  35          // ------ Private variables ----------------------------------------
  36          tByte Clock_second;
  37          tByte Clock_minute;
  38          
  39          // ------ Private constants ----------------------------------------
  40          
  41          /*------------------------------------------------------------------*-
  42            Clock_Init()
  43            Initialisation function for the switch library.
  44          -*------------------------------------------------------------------*/
  45          void Clock_Init(void)
  46             {
  47   1         Clock_second = 0;
  48   1         Clock_minute = 0;
  49   1         
  50   1         hSCH_sleep_EN = 1;
  51   1         hSCH_sleep_EN_time = 0;
  52   1         
  53   1         ID_disable_G = 0;
  54   1         ID_disable_time = 0;
C51 COMPILER V9.54   CLOCK                                                                 08/17/2016 14:42:41 PAGE 2   

  55   1         }
  56          
  57          /*------------------------------------------------------------------*-
  58            Clock_update()
  59            Initialisation function for the switch library.
  60            1s/ticket.
  61          -*------------------------------------------------------------------*/
  62          void Clock_update(void)
  63             {
  64   1         Clock_second += 1;
  65   1         
  66   1         // 10s after power on, close passwd match.
  67   1         Self_learn_reset();
  68   1         
  69   1         if(Clock_second >= 40)
  70   1            {
  71   2            Clock_second = 0;
  72   2            Clock_minute += 1;
  73   2            if(Clock_minute >= 60)
  74   2               {
  75   3               Clock_minute = 0;
  76   3               }
  77   2            
  78   2            // Detect battery every minute.
  79   2            Battery_detection();          
  80   2            }
  81   1         // Change system status.
  82   1         System_change();
  83   1         
  84   1         // Reset RXD power after a short time.
  85   1      // RXD_power_reset();
  86   1         
  87   1         if(ID_disable_G)
  88   1            {
  89   2            ID_disable_time += 1;
  90   2            if(ID_disable_time > 3)
  91   2               {
  92   3               ID_disable_time = 0;
  93   3               ID_disable_G = 0;
  94   3               }
  95   2            }
  96   1         
  97   1         if(hSCH_sleep_EN)
  98   1            {
  99   2            hSCH_sleep_EN_time += 1;
 100   2            if(hSCH_sleep_EN_time > 10)
 101   2               {
 102   3               hSCH_sleep_EN_time = 0;
 103   3               hSCH_sleep_EN = 0;
 104   3               XB_open_flag = 0;
 105   3               
 106   3               RXD_power_off();
 107   3               
 108   3      //       Speech_RST = 0;
 109   3               Speech_EN = 0;
 110   3               
 111   3               hSCH_Go_To_Sleep();
 112   3               }
 113   2            }  
 114   1         }
 115          
 116          /*------------------------------------------------------------------*-
C51 COMPILER V9.54   CLOCK                                                                 08/17/2016 14:42:41 PAGE 3   

 117            System_change()
 118            Initialisation function for the switch library.
 119            1s/ticket.
 120          -*------------------------------------------------------------------*/
 121          void System_change(void)
 122             {
 123   1         if(ID_certificated_G)
 124   1            {
 125   2            ID_certificated_G = 0;
 126   2            System_EN_G = ~System_EN_G;
 127   2            // If system is enabled, deploy the vibration sensor and ultrasonic sensor.
 128   2            if(System_EN_G == 1)
 129   2               {
 130   3               Goto_speech(System_open);
 131   3               XB_open_flag = 0;
 132   3               }
 133   2            else
 134   2               {
 135   3               Goto_speech(System_closed);      
 136   3               XB_open_flag = 0;
 137   3               }
 138   2            }
 139   1         }
 140          
 141          /*------------------------------------------------------------------*-
 142            ---- END OF FILE -------------------------------------------------
 143          -*------------------------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    113    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
