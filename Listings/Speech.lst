C51 COMPILER V9.54   SPEECH                                                                04/01/2016 10:06:43 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SPEECH
OBJECT MODULE PLACED IN .\Objects\Speech.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE Speech.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEBUG
                    - OBJECTEXTEND PRINT(.\Listings\Speech.lst) TABS(3) OBJECT(.\Objects\Speech.obj)

line level    source

   1          /*------------------------------------------------------------------*-
   2             A.C (v1.00)
   3            ------------------------------------------------------------------
   4             Simple switch interface code, with software debounce.
   5          
   6             COPYRIGHT
   7             ---------
   8             This code is copyright (c) 2001 by Richard Zhang.
   9          -*------------------------------------------------------------------*/
  10          
  11          #include "Main.h"
  12          #include "Port.h"
  13          
  14          #include "Speech.h"
  15          #include "Delay.h"
  16          
  17          // ------ Public variable definitions ------------------------------
  18          bit Speech_blocked_G;   // Block other speech program.
  19          
  20          // ------ Public variable declarations -----------------------------
  21          
  22          // ------ Private variables ----------------------------------------
  23          tByte Speech_scenario;
  24          tByte Speech_time;
  25          tByte Speech_time_thres;
  26          bit Firsttime_power_up_G;
  27          
  28          // ------ Private constants ----------------------------------------
  29          
  30          /*------------------------------------------------------------------*-
  31            Speech_Init()
  32            Initialisation function for the speech library.
  33          -*------------------------------------------------------------------*/
  34          void Speech_Init(void)
  35             {  
  36   1         Speech_EN = 0;
  37   1         Speech_RST = 1;   
  38   1         Speech_data = 0;
  39   1         Speech_time = 0;
  40   1         
  41   1         Firsttime_power_up_G = 1;
  42   1         }
  43          
  44          /*--------------------------------------------------
  45             Send_speech()
  46          ---------------------------------------------------*/
  47          void Send_speech(tByte count_a, tByte time_b)
  48             {
  49   1         tByte i;
  50   1         Speech_EN = 1;
  51   1         Speech_RST = 0;
  52   1         Delay(LOOP_TIMEOUT_INIT_050ms);
  53   1         Speech_RST = 1;
  54   1         Delay(LOOP_TIMEOUT_INIT_050ms);
C51 COMPILER V9.54   SPEECH                                                                04/01/2016 10:06:43 PAGE 2   

  55   1         for(i=0; i < count_a; i++)
  56   1            {
  57   2            Speech_data = 1; 
  58   2            Delay(LOOP_TIMEOUT_INIT_001ms);
  59   2            Speech_data = 0; 
  60   2            Delay(LOOP_TIMEOUT_INIT_001ms);
  61   2            }
  62   1         Speech_time_thres = time_b;
  63   1         
  64   1         if(Speech_scenario != Tick)
  65   1            Speech_scenario = 0;
  66   1         }
  67          
  68          /*----------------------------------------------------------------
  69             Goto_speech()
  70             Update the speech function for every 1s
  71          ------------------------------------------------------------------*/
  72          void Goto_speech(tByte count_b)
  73             {
  74   1         Speech_scenario = count_b;
  75   1         }
  76          
  77          /*----------------------------------------------------------------
  78             Speech_update()
  79             Update the speech function, 1s/ticket.
  80          ------------------------------------------------------------------*/
  81          void Speech_update(void)
  82             {
  83   1         Speech_broadcast();
  84   1         }
  85             
  86          /*----------------------------------------------------------------
  87             Speech_s_update_s()
  88             Instant speech update, 1ms/ticket, for now, only "Tich" voice.
  89          ------------------------------------------------------------------*/
  90          void Speech_s_update(void)
  91             {
  92   1         if(Speech_scenario == Tick)
  93   1            {
  94   2            if(Speech_EN)
  95   2               {
  96   3               Speech_time += 1;
  97   3               if(Speech_time > Speech_time_thres)
  98   3                  {
  99   4                  Speech_time = 0;
 100   4                  Speech_EN = 0;
 101   4                  Speech_scenario = 0;
 102   4                  }
 103   3               }
 104   2            else
 105   2               {
 106   3               switch(Speech_scenario)
 107   3                  {
 108   4                  case Tick:
 109   4                     {
 110   5                     Send_speech(Tick, 10);
 111   5                     }
 112   4                  break;      
 113   4                  }     
 114   3               }     
 115   2            }
 116   1         }
C51 COMPILER V9.54   SPEECH                                                                04/01/2016 10:06:43 PAGE 3   

 117          
 118          /*----------------------------------------------------------------
 119             Speech_broadcast()
 120             broadcast the various speech.
 121          ------------------------------------------------------------------*/
 122          void Speech_broadcast(void)
 123             {  
 124   1         if(Speech_EN)
 125   1            {
 126   2            Speech_time += 1;
 127   2            if(Speech_time > Speech_time_thres)
 128   2               {
 129   3               Speech_time = 0;
 130   3               Speech_EN = 0;
 131   3               }
 132   2            }
 133   1         else
 134   1            {
 135   2            switch(Speech_scenario)
 136   2               {
 137   3               case No_voice:
 138   3                  {
 139   4                  Send_speech(No_voice, 1);
 140   4                  }
 141   3               break;
 142   3               case First_touch:
 143   3                  {
 144   4                  Send_speech(First_touch, 3);
 145   4               }
 146   3               break;
 147   3               case Stolen_motor:
 148   3                  {
 149   4                  Send_speech(Stolen_motor, 9);
 150   4                  }
 151   3               break;
 152   3               case Appreciate_life:
 153   3                  {
 154   4                  Send_speech(Appreciate_life, 5);
 155   4                  }
 156   3               break;
 157   3               case Shengbaolong_brand:
 158   3                  {
 159   4                  Send_speech(Shengbaolong_brand, 2);
 160   4                  }
 161   3               break;
 162   3               case Reminder:
 163   3                  {
 164   4                  Send_speech(Reminder, 2);
 165   4                  }
 166   3               break;
 167   3               case Siren:
 168   3                  {
 169   4                  Send_speech(Siren, 1);
 170   4                  }
 171   3               break;
 172   3               case Battery_can_hold:
 173   3                  {
 174   4                  Send_speech(Battery_can_hold, 4);
 175   4                  }
 176   3               break;
 177   3               case Open_lock:
 178   3                  {
C51 COMPILER V9.54   SPEECH                                                                04/01/2016 10:06:43 PAGE 4   

 179   4                  Send_speech(Open_lock, 2);
 180   4                  }
 181   3               break;
 182   3               case Close_lock:
 183   3                  {
 184   4                  Send_speech(Close_lock, 3);
 185   4                  }
 186   3               break;
 187   3               case Kilometer:
 188   3                  {
 189   4                  Send_speech(Kilometer, 1);
 190   4                  }
 191   3               break;
 192   3               case One:
 193   3                  {
 194   4                  Send_speech(One, 1);
 195   4                  }
 196   3               break;
 197   3               case Two:
 198   3                  {
 199   4                  Send_speech(Two, 1);
 200   4                  }
 201   3               break;
 202   3               case Three:
 203   3                  {
 204   4                  Send_speech(Three, 1);
 205   4                  }
 206   3               break;
 207   3               case Four:
 208   3                  {
 209   4                  Send_speech(Four, 1);
 210   4                  }
 211   3               break;
 212   3               case Five:
 213   3                  {
 214   4                  Send_speech(Five, 1);
 215   4                  }
 216   3               break;
 217   3               case Six:
 218   3                  {
 219   4                  Send_speech(Six, 1);
 220   4                  }
 221   3               break;
 222   3               case Seven:
 223   3                  {
 224   4                  Send_speech(Seven, 1);
 225   4                  }
 226   3               break;
 227   3               case Eight:
 228   3                  {
 229   4                  Send_speech(Eight, 1);
 230   4                  }
 231   3               break;
 232   3               case Nine:
 233   3                  {
 234   4                  Send_speech(Nine, 1);
 235   4                  }
 236   3               break;
 237   3               case Ten:
 238   3                  {
 239   4                  Send_speech(Ten, 1);
 240   4                  }
C51 COMPILER V9.54   SPEECH                                                                04/01/2016 10:06:43 PAGE 5   

 241   3               break;
 242   3               case Second_touch:
 243   3                  {
 244   4                  Send_speech(Second_touch, 7);
 245   4                  }
 246   3               break;
 247   3               case System_closed:
 248   3                  {
 249   4                  Send_speech(System_closed, 4);
 250   4                  }
 251   3               break;
 252   3               case Tailing_brand:
 253   3                  {
 254   4                  Send_speech(Tailing_brand, 1);
 255   4                  }
 256   3               break;
 257   3               case Xinri_brand:
 258   3                  {
 259   4                  Send_speech(Xinri_brand, 1);
 260   4                  }
 261   3               break;
 262   3               case Ticktack:
 263   3                  {
 264   4                  Send_speech(Ticktack, 2);
 265   4                  }
 266   3               break;      
 267   3               case Aima_brand:
 268   3                  {
 269   4                  Send_speech(Aima_brand, 2);
 270   4                  }
 271   3               break;
 272   3               case System_open:
 273   3                  {
 274   4                  Send_speech(System_open, 4);
 275   4                  }
 276   3               break;
 277   3               case Hundred:
 278   3                  {
 279   4                  Send_speech(Hundred, 1);
 280   4                  }
 281   3               break;
 282   3               case Zero:
 283   3                  {
 284   4                  Send_speech(Zero, 1);
 285   4                  }
 286   3               break;
 287   3               case Fengyang_brand:
 288   3                  {
 289   4                  Send_speech(Fengyang_brand, 1);
 290   4                  }
 291   3               break;
 292   3               case Kaiqi_brand:
 293   3                  {
 294   4                  Send_speech(Kaiqi_brand, 1);
 295   4                  }
 296   3               break;
 297   3               case Kangjing_brand:
 298   3                  {
 299   4                  Send_speech(Kangjing_brand, 1);
 300   4                  }
 301   3               break;
 302   3               case Xiangniu_brand:
C51 COMPILER V9.54   SPEECH                                                                04/01/2016 10:06:43 PAGE 6   

 303   3                  {
 304   4                  Send_speech(Xiangniu_brand, 1);
 305   4                  }
 306   3               break;
 307   3               }     
 308   2            }  
 309   1         }
 310          
 311          /*------------------------------------------------------------------*-
 312            ---- END OF FILE -------------------------------------------------
 313          -*------------------------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    443    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
