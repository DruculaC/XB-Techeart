C51 COMPILER V9.54   IIC                                                                   04/01/2016 10:06:44 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\IIC.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE IIC.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEBUG OB
                    -JECTEXTEND PRINT(.\Listings\IIC.lst) TABS(3) OBJECT(.\Objects\IIC.obj)

line level    source

   1          /*------------------------------------------------------------------*-
   2             IIC.C (v1.00)
   3            ------------------------------------------------------------------
   4             IIC program for other program.
   5          
   6             COPYRIGHT
   7             ---------
   8             This code is copyright (c) 2016 by Richard Zhang.
   9          -*------------------------------------------------------------------*/
  10          
  11          #include "Main.h"
  12          #include "Port.h"
  13          
  14          #include "IIC.h"
  15          #include "Delay.h"
  16          
  17          // ------ Public variable definitions ------------------------------
  18          
  19          // ------ Public variable declarations -----------------------------
  20          
  21          // ------ Private variables ----------------------------------------
  22          tByte IIC_buffer[8];    // IIC buffer data.
  23          tByte CTRL_REG1_data;   // The data in CTRL_REG1.
  24          
  25          // ------ Private constants ----------------------------------------
  26          
  27          
  28          /*------------------------------------------------------------------*-
  29            IIC_Init()
  30            Program for IIC send a whole byte, include start stop and ack
  31          -*------------------------------------------------------------------*/
  32          void IIC_Init(void)
  33             {
  34   1         // Set the sensor in 100Hz ODR, Standby
  35   1         Single_Write_IIC(0x2a, 0x18);
  36   1         // ELE = 1, OAE = 1, enable X, Y, disable Z.
  37   1         Single_Write_IIC(0x15, 0xd8);
  38   1         // Threshold value is 1g for 0.063g/count.
  39   1         Single_Write_IIC(0x17, 0x10);
  40   1         // Debounce counter is 300ms, the value is 300ms/10ms = 30, 0x1e.
  41   1         Single_Write_IIC(0x18, 0x0a);
  42   1         // Enable FF_MT interrupt function.
  43   1         Single_Write_IIC(0x2d, 0x04);
  44   1         // Route the FF_MT interrupt to INT1 hardware pin.
  45   1         Single_Write_IIC(0x2e, 0x04);
  46   1         // Read the CTRL_REG1.
  47   1         CTRL_REG1_data = Single_Read_IIC(0x2a);
  48   1         CTRL_REG1_data |= 0x01;
  49   1         // Set the sensor in active mode.
  50   1         Single_Write_IIC(0x2A, CTRL_REG1_data);
  51   1         }
  52          
  53          /*------------------------------------------------------------------*-
  54            Single_Write_IIC()
C51 COMPILER V9.54   IIC                                                                   04/01/2016 10:06:44 PAGE 2   

  55            Program for IIC send a whole byte, include start stop and ack
  56          -*------------------------------------------------------------------*/
  57          void Single_Write_IIC(tByte REG_Address, tByte REG_data)
  58             {
  59   1         IIC_Start();                  //起始信号
  60   1         IIC_SendByte(SlaveAddress);   //发送设备地址+写信号
  61   1         IIC_SendByte(REG_Address);    //内部寄存器地址
  62   1         IIC_SendByte(REG_data);       //内部寄存器数据
  63   1         IIC_Stop();                   //发送停止信号
  64   1         }
  65          
  66          /*------------------------------------------------------------------*-
  67            Single_Read_IIC()
  68            Program for IIC read a whole byte, include start stop and ack
  69          -*------------------------------------------------------------------*/
  70          tByte Single_Read_IIC(tByte REG_Address)
  71             {  
  72   1         tByte REG_data;
  73   1         IIC_Start();                          //起始信号
  74   1         IIC_SendByte(SlaveAddress);           //发送设备地址+写信号
  75   1         IIC_SendByte(REG_Address);            //发送存储单元地址，从0开始 
  76   1         IIC_Start();                          //起始信号
  77   1         IIC_SendByte(SlaveAddress+1);         //发送设备地址+读信号
  78   1         REG_data = IIC_RecvByte();            //读出寄存器数据
  79   1         IIC_SendACK(1);
  80   1         IIC_Stop();                           //停止信号
  81   1         return REG_data; 
  82   1         }
  83          
  84          /*------------------------------------------------------------------*-
  85            Multiple_read_IIC()
  86            Program for IIC read a whole byte, include start stop and ack
  87          -*------------------------------------------------------------------*/
  88          void Multiple_read_IIC(tByte Start_add, tByte Read_count)
  89          {   
  90   1         tByte i;
  91   1         IIC_Start();                           //起始信号
  92   1         IIC_SendByte(SlaveAddress);            //发送设备地址+写信号
  93   1         IIC_SendByte(Start_add);               //发送存储单元地址，从0x01开始   
  94   1         IIC_Start();                           //起始信号
  95   1         IIC_SendByte(SlaveAddress+1);          //发送设备地址+读信号
  96   1         for (i=0; i<Read_count; i++)           //连续读取6个地址数据，存储中BUF
  97   1            {
  98   2            IIC_buffer[i] = IIC_RecvByte();     //IIC_buffer[0]存储0x32地址中的数据
  99   2            if (i == Read_count-1)
 100   2               {
 101   3               IIC_SendACK(1);                  //最后一个数据需要回NOACK
 102   3               }
 103   2            else
 104   2               {
 105   3               IIC_SendACK(0);                  //回应ACK
 106   3               }
 107   2            }
 108   1         IIC_Stop();                            //停止信号
 109   1         Delay(LOOP_TIMEOUT_INIT_005ms);
 110   1         }
 111          
 112          /*------------------------------------------------------------------*-
 113            IIC_SendByte()
 114            Program for IIC send a byte.
 115          -*------------------------------------------------------------------*/
 116          void IIC_SendByte(tByte dat)
C51 COMPILER V9.54   IIC                                                                   04/01/2016 10:06:44 PAGE 3   

 117             {
 118   1         tByte i;
 119   1         for (i=0; i<8; i++)        //8位计数器
 120   1            {
 121   2            dat <<= 1;              //移出数据的最高位
 122   2            SDA = CY;               //送数据口
 123   2            SCL = 1;                //拉高时钟线
 124   2            Delay5us();             //延时
 125   2            SCL = 0;                //拉低时钟线
 126   2            Delay5us();             //延时
 127   2            }
 128   1         IIC_RecvACK();
 129   1         }
 130          
 131          /*------------------------------------------------------------------*-
 132            IIC_RecvByte()
 133            Program for IIC receive a byte.
 134          -*------------------------------------------------------------------*/
 135          tByte IIC_RecvByte()
 136             {
 137   1         tByte i;
 138   1         tByte dat = 0;
 139   1      
 140   1         SDA = 1;                   //使能内部上拉,准备读取数据,
 141   1         for (i=0; i<8; i++)        //8位计数器
 142   1            {
 143   2            dat <<= 1;
 144   2            SCL = 1;                //拉高时钟线
 145   2            Delay5us();             //延时
 146   2            dat |= SDA;             //读数据               
 147   2            SCL = 0;                //拉低时钟线
 148   2            Delay5us();             //延时
 149   2            }
 150   1         return dat;
 151   1         }
 152          
 153          /*------------------------------------------------------------------*-
 154            IIC_Start()
 155            Program for IIC start signal.
 156          -*------------------------------------------------------------------*/
 157          void IIC_Start()
 158             {
 159   1         SDA = 1;
 160   1         SCL = 1;
 161   1         Delay5us();
 162   1         SDA = 0;
 163   1         Delay5us();
 164   1         SCL = 0;
 165   1         }
 166          
 167          /*------------------------------------------------------------------*-
 168            IIC_Stop()
 169            Program for IIC stop signal.
 170          -*------------------------------------------------------------------*/
 171          void IIC_Stop()
 172             {
 173   1         SDA = 0;
 174   1         SCL = 1;
 175   1         Delay5us();
 176   1         SDA = 1;
 177   1         Delay5us();
 178   1         }
C51 COMPILER V9.54   IIC                                                                   04/01/2016 10:06:44 PAGE 4   

 179          
 180          /*------------------------------------------------------------------*-
 181            IIC_SendACK()
 182            Program for IIC send ACK signal.
 183          -*------------------------------------------------------------------*/
 184          void IIC_SendACK(bit ack)
 185             {
 186   1         SDA = ack;
 187   1         SCL = 1;
 188   1         Delay5us();
 189   1         SCL = 0;
 190   1         Delay5us();
 191   1         }
 192          
 193          /*------------------------------------------------------------------*-
 194            IIC_RecvACK()
 195            Program for IIC receive ACK signal.
 196          -*------------------------------------------------------------------*/
 197          bit IIC_RecvACK()
 198             {
 199   1         SCL = 1;
 200   1         Delay5us();
 201   1         CY = SDA;
 202   1         SCL = 0;
 203   1         Delay5us();
 204   1         return CY;
 205   1         }
 206          
 207          /*------------------------------------------------------------------*-
 208            ---- END OF FILE -------------------------------------------------
 209          -*------------------------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    327    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
