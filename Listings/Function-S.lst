C51 COMPILER V9.54   FUNCTION_S                                                            03/23/2016 11:49:19 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE FUNCTION_S
OBJECT MODULE PLACED IN .\Objects\Function-S.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE Function-S.c ROM(SMALL) OPTIMIZE(8,SPEED) BROWSE DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\Function-S.lst) TABS(3) OBJECT(.\Objects\Function-S.obj)

line level    source

   1          /*------------------------------------------------------------------*-
   2             A.C (v1.00)
   3            ------------------------------------------------------------------
   4             Simple switch interface code, with software debounce.
   5          
   6             COPYRIGHT
   7             ---------
   8             This code is copyright (c) 2001 by Richard Zhang.
   9          -*------------------------------------------------------------------*/
  10          
  11          #include "Main.h"
  12          #include "Port.h"
  13          
  14          #include "Function-S.h"
  15          #include "ISP_DataFlash.h"
  16          #include "Speech.h"
  17          #include "Selflearn.h"
  18          #include "Protection.h"
  19          
  20          // ------ Public variable definitions ------------------------------
  21          bit Vehicle_poweron_EN;    // Enable flag for vehicle's sorts of power.
  22          
  23          // ------ Public variable declarations -----------------------------
  24          
  25          // ------ Private variables ----------------------------------------
  26          tWord Vehicle_poweron_time;   // Delay time of vehicle's power on.
  27          
  28          // ------ Private constants ----------------------------------------
  29          
  30          /*------------------------------------------------------------------*-
  31            Self_learn_Init()
  32            Initialisation function for the switch library.
  33          -*------------------------------------------------------------------*/
  34          void Function_s_update(void)
  35             {  
  36   1         Protection_Vibration_detection();
  37   1         
  38   1         Vehicle_poweron_detection();
  39   1         }
  40          
  41          /*------------------------------------------------------------------*-
  42            Vehicle_poweron_detection()
  43            Initialisation function for the switch library.
  44          -*------------------------------------------------------------------*/
  45          void Vehicle_poweron_detection(void)
  46             {
  47   1         if(Vehicle_poweron_EN)
  48   1            {
  49   2            Vehicle_poweron_time += 1;
  50   2            if(Vehicle_poweron_time > 2000)
  51   2               {
  52   3               Vehicle_poweron_time = 0;
  53   3               // Turn on electrical vehicle's sorts of power.
  54   3               Hall_control = 0;
C51 COMPILER V9.54   FUNCTION_S                                                            03/23/2016 11:49:19 PAGE 2   

  55   3               Controller_lock = 0;
  56   3               Vehicle_poweron_EN = 0; 
  57   3               }
  58   2            }
  59   1         }
  60          
  61          /*------------------------------------------------------------------*-
  62            Function_S_init()
  63            Initialisation function for the switch library.
  64          -*------------------------------------------------------------------*/
  65          void Function_S_init(void)
  66             {
  67   1         Selflearn_Init();
  68   1         Protection_init();
  69   1         
  70   1         Vehicle_poweron_EN = 0;
  71   1         Vehicle_poweron_time = 0;
  72   1         }
  73          
  74          
  75          /*------------------------------------------------------------------*-
  76            ---- END OF FILE -------------------------------------------------
  77          -*------------------------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     48    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
